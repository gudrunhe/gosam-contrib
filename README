#=========
# Synopsis
#=========

This package is a collection of tools by different authors.
These tools are used by the GoSam package. This package is
intended to simplify the installation and setup of the single
libraries and tools.

Some packages are included only as stripped or modified versions.
For the full packages, documentation, full author list and the original code
please refer to the given URLs.

#=============
# Installation
#=============

If you did NOT obtain this package from a distribution/tarball, you must have
the GNU autotools (see http://www.gnu.org/software/autoconf/ and
"Related Software" therein) installed on your system. In that case, first run

    ./autogen.sh

In order to install the libraries under a common path run

    ./configure --prefix=<your prefix>
    make
    make install

After successful installation you will find the file

    <your prefix>/share/gosam-contrib/gosam.conf

which you should either copy or link to your home directory

    ln -s <your prefix>/share/gosam-contrib/gosam.conf $HOME

Furthermore, you should ensure that the LD_LIBRARY_PATH is updated
to contain the installation path of this library, e.g. by setting
the variable either locally or in your startup script ($HOME/.bashrc, ...):

    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:<your prefix>/lib

For more information consult the file 'INSTALL'.

#=========
# Contents
#=========

#---
# FF
#---

URL: http://www.nikhef.nl/~t68/ff/

 ====================================================
   FF 2.0, a package to evaluate one-loop integrals
 written by G. J. van Oldenborgh, NIKHEF-H, Amsterdam
 ====================================================
 for the algorithms used see preprint NIKHEF-H 89/17,
 'New Algorithms for One-loop Integrals', by G.J. van
 Oldenborgh and J.A.M. Vermaseren, published in 
 Zeitschrift fuer Physik C46(1990)425.
 ====================================================

#--------
# QCDLoop
#--------

URL: http://qcdloop.fnal.gov/

 ====================================================
   This is QCDLoop - version 1.9                     
   Authors: Keith Ellis and Giulia Zanderighi        
   (ellis@fnal.gov, g.zanderighi1@physics.ox.ac.uk)  
   For details see FERMILAB-PUB-07-633-T,OUTP-07/16P 
   arXiv:0712.1851 [hep-ph], published in            
   JHEP 0802:002,2008.                               
 ====================================================

#------------
# AVH OneLOop
#------------

URL: http://helac-phegas.web.cern.ch/helac-phegas/OneLOop.html

########################################################################
#                                                                      #
#                      You are using OneLOop-3.6                       #
#                                                                      #
# for the evaluation of 1-loop scalar 1-, 2-, 3- and 4-point functions #
#                                                                      #
# author: Andreas van Hameren <hamerenREMOVETHIS@ifj.edu.pl>           #
#   date: 14-05-2014                                                   #
#                                                                      #
# Please cite                                                          #
#    A. van Hameren,                                                   #
#      Comput.Phys.Commun. 182 (2011) 2427-2438, arXiv:1007.4716       #
#    A. van Hameren, C.G. Papadopoulos and R. Pittau,                  #
#      JHEP 0909:106,2009, arXiv:0903.4665                             #
# in publications with results obtained with the help of this program. #
#                                                                      #
########################################################################

The file avh_olo-3.6/avh_olo.f90 was generated from the OneLOop source files
using 
 ./create.py source
avh_olo_xkinds.f90.in added and following patch applied


--- a/avh_olo.f90 2015-06-24 14:48:02.723443589 +0200
+++ b/avh_olo.f90 2015-06-24 14:55:47.328176383 +0200
@@ -77,7 +77,9 @@
 
 
 module avh_olo_dp_kinds
-  integer ,parameter :: kindr2=selected_real_kind(15) 
+  use avh_olo_xkind
+  public :: kindr2
+  integer ,parameter :: kindr2=olo_xkind  
 end module
 
 
@@ -6540,19 +6542,19 @@
   subroutine olo_scale( val )
 !*******************************************************************
 !*******************************************************************
-  real(kind(1d0)) ,intent(in) :: val
+  real(kindr2) ,intent(in) :: val
   if (initz) call init
-  muscale = convert(val)
+  muscale = val
   end subroutine
  
  
   subroutine olo_onshell( thrs )
 !*******************************************************************
 !*******************************************************************
-  real(kind(1d0)) ,intent(in) :: thrs
+  real(kindr2) ,intent(in) :: thrs
   if (initz) call init
   nonzerothrs = .true.
-  onshellthrs = convert(thrs)
+  onshellthrs = thrs
   end subroutine
 
 
@@ -6568,17 +6570,17 @@
   function olo_get_scale() result(rslt)
 !*******************************************************************
 !*******************************************************************
-  real(kind(1d0)) :: rslt
+  real(kindr2) :: rslt
   if (initz) call init
-  rslt = adble(muscale)
+  rslt = muscale
   end function
 
   function olo_get_onshell() result(rslt)
 !*******************************************************************
 !*******************************************************************
-  real(kind(1d0)) :: rslt
+  real(kindr2) :: rslt
   if (initz) call init
-  rslt = adble(onshellthrs)
+  rslt = onshellthrs
   end function
 
 
@@ -11805,13 +11807,12 @@
 
   subroutine olo_scale( val )
   use avh_olo_dp ,only: dp_sub=>olo_scale 
-  real(kind(1d0)) ,intent(in) :: val
+  real(olo_dp_kind) ,intent(in) :: val
   call dp_sub( val ) 
   end subroutine
 
   subroutine olo_onshell( val )
-  use avh_olo_dp ,only: dp_sub=>olo_onshell 
-  real(kind(1d0)) ,intent(in) :: val
+  real(olo_dp_kind) ,intent(in) :: val
   call dp_sub( val ) 
   end subroutine
 


#---------
# Golem95C
#---------

URL: http://projects.hepforge.org/~golem/95/

#--------
# Samurai
#--------

URL: http://cern.ch/samurai/
     http://projects.hepforge.org/~samurai/

  ********************************************************************
  ********************** SAMURAI - version 2.1.1
  ********************************************************************
  *                                                                  *
  *                                                                  *
  * Authors: P. Mastrolia, G. Ossola, T. Reiter and F. Tramontano    *
  *                                                                  *
  * pierpaolo.mastrolia@cern.ch                                      *
  * gossola@citytech.cuny.edu                                        *
  * reiterth@mpp.mpg.de                                              *
  * francesco.tramontano@cern.ch                                     *
  *                                                                  *
  *  For details please see: arXiv:1006.0710                         *
  *                                                                  *
  *  On the web:  http://cern.ch/samurai                             *
  *                                                                  *
  ********************************************************************
  *                                                                  *
  * output files: <output.log>   [ for verbosity.gt.0 ]              *
  *                                                                  *
  *               <bad.points>   [ for itest.gt.0     ]              *
  *                                                                  *
  ********************************************************************

#===========================
# Notes on various compilers
#===========================

* The compilers ifort and pgf90 require the additional flag "-module ."
  You should call make with the following options:

      make FCFLAGS="-module ."

* FF has been modified such that in ffinit.f the actual installation
  path is set such that the .dat files can be reliably found at runtime.
  Depending on the installation location this might require to pass
  an option to the Fortran 77 compiler allowing for longer lines.
  For gfortran this would be

      make FFLAGS="-ffixed-line-length-none"
